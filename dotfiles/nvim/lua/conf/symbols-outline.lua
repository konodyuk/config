return function()
	require("symbols-outline").setup({
		autofold_depth = 2,
		keymaps = {
			-- TODO: fix preview
			toggle_preview = "P",
		},
		-- symbol_blacklist = {
		-- 	"File",
		-- 	"Module",
		-- 	-- "Namespace",
		-- 	"Package",
		-- 	-- "Class",
		-- 	-- "Method",
		-- 	-- "Property",
		-- 	"Field",
		-- 	-- "Constructor",
		-- 	-- "Enum",
		-- 	-- "Interface",
		-- 	-- "Function",
		-- 	"Variable",
		-- 	"Constant",
		-- 	"String",
		-- 	"Number",
		-- 	"Boolean",
		-- 	"Array",
		-- 	"Object",
		-- 	"Key",
		-- 	"Null",
		-- 	"EnumMember",
		-- 	-- "Struct",
		-- 	"Event",
		-- 	"Operator",
		-- 	"TypeParameter",
		-- 	-- "Component",
		-- 	"Fragment",
		-- },
		-- symbols = {
		-- 	-- File = { icon = "Ôúì", hl = "TSURI" },
		-- 	-- Module = { icon = "P", hl = "TSNamespace" },
		-- 	Namespace = { icon = "N", hl = "TSNamespace" },
		-- 	-- Package = { icon = "Ô£ñ", hl = "TSNamespace" },
		-- 	Class = { icon = "C", hl = "TSType" },
		-- 	Method = { icon = "f", hl = "TSMethod" },
		-- 	Property = { icon = "f", hl = "TSMethod" },
		-- 	-- Field = { icon = "c", hl = "TSField" },
		-- 	Constructor = { icon = "f", hl = "TSConstructor" },
		-- 	Enum = { icon = "E", hl = "TSType" },
		-- 	Interface = { icon = "I", hl = "TSType" },
		-- 	Function = { icon = "f", hl = "TSFunction" },
		-- 	-- Variable = { icon = "Óûõ", hl = "TSConstant" },
		-- 	-- Constant = { icon = "Óà¨", hl = "TSConstant" },
		-- 	-- String = { icon = "ùìê", hl = "TSString" },
		-- 	-- Number = { icon = "#", hl = "TSNumber" },
		-- 	-- Boolean = { icon = "‚ä®", hl = "TSBoolean" },
		-- 	-- Array = { icon = "Ôô©", hl = "TSConstant" },
		-- 	-- Object = { icon = "‚¶ø", hl = "TSType" },
		-- 	-- Key = { icon = "üîê", hl = "TSType" },
		-- 	-- Null = { icon = "NULL", hl = "TSType" },
		-- 	-- EnumMember = { icon = "ÔÖù", hl = "TSField" },
		-- 	Struct = { icon = "S", hl = "TSType" },
		-- 	-- Event = { icon = "üó≤", hl = "TSType" },
		-- 	-- Operator = { icon = "+", hl = "TSOperator" },
		-- 	-- TypeParameter = { icon = "ùôè", hl = "TSParameter" },
		-- },
	})
end
